3.3 Path Expressions


==================
3.3.1.1 Path operator (/) stand alone
==================

$node/

---

(module (path_expr (var_ref (QName)))) 

==================
3.3.1.1 Path operator (/) wildcard
==================

$node/*

---

(module 
  (path_expr 
    (var_ref (QName)) 
    (abbrev_forward_step (wildcard))
))

==================
3.3.1.1 Path operator (/) kind test
==================

$node/text()

---

(module 
  (path_expr 
    (var_ref (QName)) 
    (abbrev_forward_step (text_test))
))

==================
3.3.1.1 Path operator (/) Axes
==================

$node/child::para

---

(module 
(path_expr (var_ref (QName)) 
(forward_axis) (QName)
))

==================
3.3.1.1 Path operator (/) going down with comparison filter 
==================

fn:doc("bib.xml")/books/book[fn:count(./author)>1]

---

(module 
 (path_expr 
  (function_call (QName) (argument_list (argument (string_literal)))) 
  (abbrev_forward_step (QName)) 
  (abbrev_forward_step (QName)) 
  (predicate 
	(comparison_expr 
	  (function_call 
	  (QName) (argument_list 
	(argument (path_expr (context_item_expr) (abbrev_forward_step (QName)))))) 
	  (comparison_op) 
	  (integer_literal)
	))))

==================
3.3.2.1 Axes foward with Qname
==================

$node/child::para

---

(module 
 (path_expr 
  (var_ref (QName))
  (forward_axis) (QName)
 ))

==================
3.3.2.2 Node Tests with wildcard
==================

$node/child::*

---

(module 
 (path_expr 
  (var_ref (QName))
  (forward_axis) (wildcard)
))

==================
3.3.3 Predicates within Steps with filter predicate
==================

$node/child::para[1]

---

(module 
 (path_expr 
  (var_ref (QName)) 
  (forward_axis) (QName) 
  (predicate (integer_literal))
 )) 

==================
3.3.4 Unabbreviated Syntax with node test
==================

$node/child::node()

---

(module 
 (path_expr 
  (var_ref (QName)) 
  (forward_axis) 
  (any_kind_test)
 ))


==================
3.3.4 Unabbreviated Syntax with steps and predicate
==================

$node/child::div1/child::para[1]

---

(module 
 (path_expr 
  (var_ref (QName))
  (forward_axis) 
  (QName) 
  (forward_axis) 
  (QName) 
  (predicate (integer_literal))
 ))


==================
3.3.5 Abbreviated Syntax  with QName
==================

./para

---

(module 
 (path_expr 
  (context_item_expr) 
  (abbrev_forward_step (QName)
)))

==================
3.3.5 Abbreviated Syntax with attribute
==================

./@name

---

(module 
 (path_expr 
  (context_item_expr) 
  (abbrev_forward_step (abbrev_attr) (QName))
))

==================
3.3.5 Abbreviated Syntax with attribute wildcard
==================

./@*

---

(module 
 (path_expr 
  (context_item_expr) 
  (abbrev_forward_step (abbrev_attr) (wildcard))
))

==================
3.3.5 Abbreviated Syntax with reverse up
==================

./..

---

(module 
 (path_expr 
  (context_item_expr) 
  (abbrev_reverse_step)
))

==================
3.3.5 Abbreviated Syntax with reverse up then filter on attribute
==================

./../@lang

---

(module 
 (path_expr 
  (context_item_expr) 
  (abbrev_reverse_step)
  (abbrev_forward_step (abbrev_attr) (QName))
))

==================
3.3.5 Abbreviated Syntax with forward axis then use predicate filters
==================

./para[./@type="warning"][5]

---

(module 
  (path_expr (context_item_expr) (abbrev_forward_step (QName)) 
  (predicate 
	(comparison_expr 
	(path_expr (context_item_expr) (abbrev_forward_step (abbrev_attr) (QName))) 
	(comparison_op) 
	(string_literal)
	)) 
  (predicate (integer_literal)
)))

